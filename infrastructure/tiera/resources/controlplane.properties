web.http.default.port=8080
web.http.default.path=/api
web.http.management.port=8181
web.http.management.path=/management
web.http.control.port=9999
web.http.control.path=/control
web.http.protocol.port=8282
web.http.protocol.path=/api/v1/dsp
web.http.metrics.port=9998
web.http.metrics.path=/metrics

tractusx.api.observability.allow-insecure=true
web.http.observability.port=8081
web.http.observability.path=/observability

edc.api.auth.key=foo

edc.fs.config=/app/configuration.properties
edc.hostname=tiera-control-plane

# This is send as the audience to outgoing ids messages/tokens
edc.dsp.callback.address=http://tiera-control-plane:8282/api/v1/dsp
edc.participant.id=BPNL00000003CPIY

edc.oauth.client.id={{ .Values.dataspace.dapsClientIdOem }}
edc.oauth.private.key.alias={{ .Values.dataspace.privateKeyAliasOem }}
edc.oauth.provider.audience=idsc:IDS_CONNECTORS_ALL
edc.oauth.endpoint.audience=http://tiera-control-plane:8282/api/v1/dsp

edc.data.encryption.algorithm=AES
edc.data.encryption.keys.alias={{ .Values.dataspace.symmetricKeySupplier }}

edc.oauth.provider.jwks.url=https://daps1.int.demo.catena-x.net/.well-known/jwks.json
edc.oauth.public.key.alias={{ .Values.dataspace.publicKeyAliasSupplier }}
edc.oauth.token.url=https://daps1.int.demo.catena-x.net/token

edc.dataplane.selector.agentplane.url=http://tiera-data-plane:8082/
edc.dataplane.selector.agentplane.sourcetypes=cx-common:Protocol?w3c:http:SPARQL,HttpData
edc.dataplane.selector.agentplane.destinationtypes=HttpProxy
edc.dataplane.selector.agentplane.properties={ "publicApiUrl": "http://tiera-data-plane:8185/api/v1/public/" }

edc.transfer.proxy.endpoint=https://tiera-data-plane:8082/
edc.transfer.proxy.token.signer.privatekey.alias={{ .Values.dataspace.privateKeyAliasSupplier }}
edc.transfer.proxy.token.verifier.publickey.alias={{ .Values.dataspace.publicKeyAliasSupplier }}
edc.transfer.send.retry.limit=0
edc.negotiation.consumer.send.retry.limit=0
edc.negotiation.provider.send.retry.limit=0

edc.vault.hashicorp.url={{ .Values.security.vaultUrl }}
edc.vault.hashicorp.token={{ .Values.security.vaultToken }}
edc.vault.hashicorp.timeout.seconds=30
edc.vault.hashicorp.health.check.enabled=false
edc.vault.hashicorp.health.check.standby.ok=false
edc.vault.hashicorp.api.secret.path=/v1/knowledge
edc.vault.hashicorp.api.health.check.path=/v1/sys/health

edc.web.rest.cors.enabled=true
edc.web.rest.cors.headers=origin, content-type, accept, authorization, x-api-key
edc.web.rest.cors.methods=GET, PUT, POST, DELETE, OPTIONS
edc.web.rest.cors.origins=*

