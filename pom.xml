<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (c) 2021,2023 Contributors to the Catena-X Association
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
-->
<project>
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.catenax</groupId>
    <artifactId>knowledge</artifactId>
    <packaging>pom</packaging>
    <version>1.12.19</version>
    <name>Catena-X Knowledge Agents</name>
    <description>Top Level Project for all Knowledge Agents Modules</description>

    <dependencies>
    </dependencies>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <skipTests>false</skipTests>

       <com.azure.sdk.bom.version>1.2.2</com.azure.sdk.bom.version>
       <junit.version>5.9.0</junit.version>
       <mockito.version>4.6.1</mockito.version>
       <failsafe.version>3.2.4</failsafe.version>
       <okhttp.version>4.9.3</okhttp.version>
       <rdf4j.version>4.2.0</rdf4j.version>
       <slf4j.version>2.0.3</slf4j.version>

       <!-- Source characteristics -->
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

       <!-- REPO -->
       <repo>ghcr.io/catenax-ng/product-knowledge/</repo>
       <platform>linux/amd64</platform>

    </properties>

    <modules>
        <module>dataspace</module>
    </modules>

    <dependencyManagement>
      <dependencies>
            <!-- BOMs -->
            <dependency>
                <groupId>com.azure</groupId>
                <artifactId>azure-sdk-bom</artifactId>
                <version>${com.azure.sdk.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
      </dependencies>
    </dependencyManagement>

    <build>
      <pluginManagement>
      <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.1.0</version>
            <!-- unfortunately you have to repeat that in all relevant sub-modules -->
            <configuration>
                <groups>!online</groups>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.5.0</version>
        </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <!--
                    NOTE: To build and tag docker images the `docker` executable needs to
                            be on the PATH to be used by the exec-maven-plugin plugin
                -->
                <executions>
                    <execution>
                        <id>docker-build-${project.artifactId}:${project.version}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>build</argument>
                                <argument>--platform</argument>
                                <argument>${platform}</argument>
                                <argument>-f</argument>
                                <argument>src/main/docker/Dockerfile</argument>
                                <argument>--build-arg</argument>
                                <argument>JAR=target/${project.artifactId}.jar</argument>
                                <argument>--build-arg</argument>
                                <argument>LIB=target/lib</argument>
                                <argument>-t</argument>
                                <argument>${repo}${project.artifactId}:${project.version}</argument>
                                <argument>.</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-tag-${project.artifactId}:latest</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>tag</argument>
                                <argument>${repo}${project.artifactId}:${project.version}</argument>
                                <argument>${repo}${project.artifactId}:latest</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-push-${project.artifactId}:${project.version}</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>push</argument>
                                <argument>${repo}${project.artifactId}:${project.version}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
            </plugin>
      </plugins>
    </pluginManagement>
    </build>
    
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Central</name>
            <url>https://repo1.maven.org/maven2</url>
        </repository>
        <repository> <!-- webvowl -->
		      <id>jitpack.io</id>
		      <url>https://jitpack.io</url>
	    </repository>
        <repository> <!-- To be able to use Eclipse aas4j -->
            <id>aas4j</id>
            <url>https://maven.pkg.github.com/arnoweiss/aas4j-transformation-library</url>
        </repository>
        <repository> <!-- runtime meta-model -->
            <id>oss</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <distributionManagement>
     <repository>
       <id>github</id>
       <name>Catena-X Maven Repository on Github</name>
       <url>https://maven.pkg.github.com/catenax-ng/product-knowledge</url>
     </repository>
    </distributionManagement>
        
</project>