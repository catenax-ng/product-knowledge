name: "Code Scanning"

on:
  push:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre_job:
      # continue-on-error: true # Uncomment once integration is finished
      runs-on: ubuntu-latest
      # Map a step output to a job output
      outputs:
        should_skip: ${{ steps.skip_check.outputs.should_skip }}
      steps:
        - id: skip_check
          uses: fkirc/skip-duplicate-actions@v5
          with:
            # All of these options are optional, so you can remove them if you are happy with the defaults
            concurrent_skipping: 'same_content'
            skip_after_successful_duplicate: 'true'
            do_not_skip: '["push", "pull_request", "workflow_dispatch", "schedule"]'

  analyze_java:
    name: Analyze Java
    runs-on: ubuntu-latest
    permissions: write-all
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
          queries: +security-and-quality

      # We need to manually instruct maven
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Login to GitHub Container Registry
        if: ${{ github.repository == 'catenax-ng/product-knowledge' && github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Java via Maven
        if: ${{ github.repository == 'catenax-ng/product-knowledge' && github.ref == 'refs/heads/main' }}
        run: |
          mvn -s settings.xml deploy -Pwith-docker-image
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Java via Maven
        if: ${{ github.repository != 'catenax-ng/product-knowledge' || github.ref != 'refs/heads/main' }}
        run: |
          mvn -s settings.xml install
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
